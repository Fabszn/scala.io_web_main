{"uuid":"2f1f74d0573b8f87130b3445d05fbaffe60519a6","bioAsHtml":"<p>Lars is a PhD student in Munich, Germany, working in the area of theorem proving. He has been using Scala for quite a while now, and is the steward of scalaz, a library for functional programming in Scala. Additionally, he is founder of the typelevel initiative which is dedicated to providing principled, type-driven Scala libraries.</p>\n","acceptedTalks":[{"talkType":"Conference","track":"Scala as a language","audienceLevel":"novice","summaryAsHtml":"<p>Typelevel recently announced their fork of the Scala compiler, with the goal of introducing exciting new features to an experimental Scala compiler for people who are happy to accept a little more turbulence as the language ascends to greater heights.</p>\n<p>But what new features are planned? How will Typelevel work with Typesafe to avoid fragmenting the Scala ecosystem and community? And how can you get involved?</p>\n<p>Jon and Lars will answer these questions, and explain some of the history, motivation and planning behind the Typelevel fork, and offer their thoughts on where it&#x27;s going over the coming months</p>\n","links":[{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/talks/GZU-778","rel":"http://cfp.scala.io/api/profile/talk","title":"More details about this talk"},{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/91e1d5b41eb4349a787d31252d448085e505fc25","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jon Pretty"},{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/2f1f74d0573b8f87130b3445d05fbaffe60519a6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Lars Hupel"}],"id":"GZU-778","title":"Typelevel Scala: What does it mean for the language, the ecosystem, the community, and you?","talkLang":"en"},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>Everybody knows monads by now, so a talk about monads would hardly be worthwhile. Let&#x27;s take it to the next level: monad transformers. We&#x27;ll learn what they are, how they naturally emerge in your code base and how to make good use of them in Scala – and maybe even how to create your own.</p>\n","links":[{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/talks/BGS-827","rel":"http://cfp.scala.io/api/profile/talk","title":"More details about this talk"},{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/2f1f74d0573b8f87130b3445d05fbaffe60519a6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Lars Hupel"}],"id":"BGS-827","title":"OptimusPrimeT","talkLang":"en"}],"company":"TU München","bio":"Lars is a PhD student in Munich, Germany, working in the area of theorem proving. He has been using Scala for quite a while now, and is the steward of scalaz, a library for functional programming in Scala. Additionally, he is founder of the typelevel initiative which is dedicated to providing principled, type-driven Scala libraries.","lastName":"Hupel","firstName":"Lars","blog":"larsrh.github.io","avatarURL":"https://avatars2.githubusercontent.com/u/923079","twitter":"@larsr_h","lang":"fr"}
