{"uuid":"0b10a33518b31d55c3e10e58a16c69c6e5a86be7","bioAsHtml":"<p>George became interested in Scala right after he graduated from university. As soon as the opportunity presented itself, he switched to full-time Scala programming, and has never looked back. Nowadays he works at SoundCloud on their scala backends, and experiments with scala compiler in the evenings and on his 20% time.</p>\n","acceptedTalks":[{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>This talk aims to shed some light on how Scala&#x27;s type-level programming is essentially logic programming (sometimes with runtime benefits), and give reasoning for code, comprising 8+ implicit parameters with funny names (FnHipsterAux). It also explores some possibilities to use this fact to reimagine a better syntax for type-level computations in scala.\nFunctional in the small, OO in the large, logic in the type system!</p>\n","links":[{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/talks/WKU-122","rel":"http://cfp.scala.io/api/profile/talk","title":"More details about this talk"},{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/0b10a33518b31d55c3e10e58a16c69c6e5a86be7","rel":"http://cfp.scala.io/api/profile/speaker","title":"George Leontiev"}],"id":"WKU-122","title":"There's a Prolog in your Scala!","talkLang":"en"}],"company":"SoundCloud Ltd.","bio":"George became interested in Scala right after he graduated from university. As soon as the opportunity presented itself, he switched to full-time Scala programming, and has never looked back. Nowadays he works at SoundCloud on their scala backends, and experiments with scala compiler in the evenings and on his 20% time.","lastName":"Leontiev","firstName":"George","blog":"folone.info","avatarURL":"http://en.gravatar.com/userimage/1075063/e256368662a3b2b3207614ae0ff28730.png?size=200","twitter":"@folone","lang":"fr"}
