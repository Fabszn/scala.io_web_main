[{"talkType":"Keynote","track":"Scala as a language","audienceLevel":"intermediate","summaryAsHtml":"<p>How do I create an app that is always available, even in the face of catastrophic hardware failures or large fluctuations in the number of active users? Both threats force us to spread out the application, to distribute it. This presentation takes a deep dive into reactive application architecture, focusing on how to build reliable communication upon normal best-effort messaging—with examples using Akka. Knowing the trade-offs allows us to build systems that strike the right balance between partition tolerance, consistency, availability, implementation complexity and operational cost.</p>\n","id":"IZB-863","speakers":[{"name":"Roland Kuhn","company":"Typesafe Inc.","id":"c60d1a39717fbc8835045990d53eab3497e508c8","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c60d1a39717fbc8835045990d53eab3497e508c8","rel":"http://cfp.scala.io/api/profile/speaker","title":"Roland Kuhn"},"twitter":"@rolandkuhn"}],"title":"Distributed in Space and Time","lang":"en","summary":"How do I create an app that is always available, even in the face of catastrophic hardware failures or large fluctuations in the number of active users? Both threats force us to spread out the application, to distribute it. This presentation takes a deep dive into reactive application architecture, focusing on how to build reliable communication upon normal best-effort messaging—with examples using Akka. Knowing the trade-offs allows us to build systems that strike the right balance between partition tolerance, consistency, availability, implementation complexity and operational cost."},{"talkType":"Keynote","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"novice","summaryAsHtml":"<p>After five years of developing the Play framework, we started prismic.io as a challenge of solving the content management problem.\nprismic.io is a distributed platform that incorporates modern concepts for dealing with data, scalability and distribution and is built on top of Scala and Play framework.\nIn this keynote, we will go through some of the challenges we encountered and discuss concepts and ideas that we implemented to get the platform in its current fit.</p>\n","id":"KYP-016","speakers":[{"name":"Sadek Drobi","company":"Zengularity","id":"a7599351f587afef8785a19c45466e76f6a6d17b","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/a7599351f587afef8785a19c45466e76f6a6d17b","rel":"http://cfp.scala.io/api/profile/speaker","title":"Sadek Drobi"},"twitter":"@sadache"},{"name":"Guillaume Bort","company":"Zengularity","id":"af404ba114bf18bf5eabf46234b3df7ec193e03e","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/af404ba114bf18bf5eabf46234b3df7ec193e03e","rel":"http://cfp.scala.io/api/profile/speaker","title":"Guillaume Bort"},"twitter":"@guillaumebort"}],"title":"Prismic.io: Two years journey of distributed system development with Scala, Play and co","lang":"en","summary":"After five years of developing the Play framework, we started prismic.io as a challenge of solving the content management problem.\r\nprismic.io is a distributed platform that incorporates modern concepts for dealing with data, scalability and distribution and is built on top of Scala and Play framework.\r\nIn this keynote, we will go through some of the challenges we encountered and discuss concepts and ideas that we implemented to get the platform in its current fit."},{"talkType":"Keynote","track":"Other","audienceLevel":"novice","summaryAsHtml":"<p>The ScalaIO team welcomes the participants to the conference, telling about the cfp process, giving out some numbers and last minute information regarding the conference.</p>\n","id":"NVD-598","speakers":[{"name":"Jean Helou","company":"Codamens","id":"c25d016decba2d31654002db0e56460b27fe90e8","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c25d016decba2d31654002db0e56460b27fe90e8","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jean Helou"},"twitter":null}],"title":"Welcome Keynote","lang":"en","summary":"The ScalaIO team welcomes the participants to the conference, telling about the cfp process, giving out some numbers and last minute information regarding the conference."},{"talkType":"Conference","track":"Scala as a language","audienceLevel":"intermediate","summaryAsHtml":"<p>Scala&#x27;s powerful type system and flexible syntax enable the design of internal DSLs, e.g. for test specifications in Specs²/ScalaTest, routing in Spray and query construction in Squeryl. While immensely useful, the budding DSL designer will quickly realize that there are precious few resources on how to approach DSL construction in Scala; the techniques, limitations and workarounds are not well understood or documented. In this talk I&#x27;ll attempt to summarize lessons learned from reading, extending and designing Scala DSLs in the hopes of saving future Scala library designers a world of pain.</p>\n","id":"MDB-738","speakers":[{"name":"Tomer Gabel","company":"Wix","id":"a0e8eccb35c7c7a9bec822e6d7ee37f9c08eca5c","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/a0e8eccb35c7c7a9bec822e6d7ee37f9c08eca5c","rel":"http://cfp.scala.io/api/profile/speaker","title":"Tomer Gabel"},"twitter":"@tomerg"}],"title":"A Field Guide to DSL Design","lang":"en","summary":"Scala's powerful type system and flexible syntax enable the design of internal DSLs, e.g. for test specifications in Specs²/ScalaTest, routing in Spray and query construction in Squeryl. While immensely useful, the budding DSL designer will quickly realize that there are precious few resources on how to approach DSL construction in Scala; the techniques, limitations and workarounds are not well understood or documented. In this talk I'll attempt to summarize lessons learned from reading, extending and designing Scala DSLs in the hopes of saving future Scala library designers a world of pain."},{"talkType":"Conference","track":"Scala as a language","audienceLevel":"intermediate","summaryAsHtml":"<p>for-comprehensions are probably the best tool provided by Scala to make your code simpler, cleaner and more readable, yet many programmers fail to take advantage of them, making their code more complicated than necessary. This talk describes some techniques, tips and tricks to make effective use of them.</p>\n","id":"LGW-721","speakers":[{"name":"Adam Rosien","company":"CrowdStrike","id":"e4c30aef10a76513b434469b994f0563544aad8e","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/e4c30aef10a76513b434469b994f0563544aad8e","rel":"http://cfp.scala.io/api/profile/speaker","title":"Adam Rosien"},"twitter":"@arosien"}],"title":"Lovely for-comprehensions: Scala's most useful syntactic tool","lang":"en","summary":"for-comprehensions are probably the best tool provided by Scala to make your code simpler, cleaner and more readable, yet many programmers fail to take advantage of them, making their code more complicated than necessary. This talk describes some techniques, tips and tricks to make effective use of them."},{"talkType":"Short conference","track":"Data and Scala","audienceLevel":"novice","summaryAsHtml":"<p>L&#x27;approche fonctionnelle pour traiter de gros volumes de données semble être une évidence, et pourtant l&#x27;écosystème Bigdata s&#x27;ouvre peu à peu. Nous balayerons ensemble les différentes solutions et leurs alternatives à base de Scala disponibles et en fonction des cas d&#x27;usages. La popularité de certains frameworks est parfois déroutante quand il s&#x27;agit faire des choix structurants. C&#x27;est avec un avis objectivé sur ces choix technologiques que vous repartirez. Vous saurez quels choix faire entre Hadoop classique, Scalding, Spark...</p>\n","id":"KVT-175","speakers":[{"name":"Vincent Heuschling","company":"Affini-Tech","id":"9c8705ff838cbd74f873cacb831fedae42550461","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/9c8705ff838cbd74f873cacb831fedae42550461","rel":"http://cfp.scala.io/api/profile/speaker","title":"Vincent Heuschling"},"twitter":"@vhe74"}],"title":"Pourquoi utiliser Scala dans un contexte Bigdata ?","lang":"fr","summary":"L'approche fonctionnelle pour traiter de gros volumes de données semble être une évidence, et pourtant l'écosystème Bigdata s'ouvre peu à peu. Nous balayerons ensemble les différentes solutions et leurs alternatives à base de Scala disponibles et en fonction des cas d'usages. La popularité de certains frameworks est parfois déroutante quand il s'agit faire des choix structurants. C'est avec un avis objectivé sur ces choix technologiques que vous repartirez. Vous saurez quels choix faire entre Hadoop classique, Scalding, Spark..."},{"talkType":"Quickie","track":"Other","audienceLevel":"novice","summaryAsHtml":"<p>I&#x27;ve started my programming career by writing tons of PHP. I&#x27;ve gradually moved to more principled languages like Scala and Haskell. But I haven&#x27;t forgotten my roots and it gave me the opportunity to start using scala with a sligthly different approach, compared to the more common java -&gt; scala way.</p>\n","id":"CPB-621","speakers":[{"name":"Clément Delafargue","company":"Penazen consulting","id":"445b511ffee321008e83539fe7d5689004eca7e1","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/445b511ffee321008e83539fe7d5689004eca7e1","rel":"http://cfp.scala.io/api/profile/speaker","title":"Clément Delafargue"},"twitter":"@clementd"}],"title":"From PHP to Scala / Haskell","lang":"en","summary":"I've started my programming career by writing tons of PHP. I've gradually moved to more principled languages like Scala and Haskell. But I haven't forgotten my roots and it gave me the opportunity to start using scala with a sligthly different approach, compared to the more common java -> scala way. "},{"talkType":"Short conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Dans l’écosystème Big Data, Hadoop et MapReduce sont largement utilisés pour gérer le traitement des données à grande échelle. Cependant le modèle MapReduce montre des limites pour certains traitements, notamment des algorithmes itératifs utilisés en Machine Learning.</p>\n<p>Spark est un outil de traitement de données en mémoire offrant plus de flexibilité de programmation et de meilleures performances qu’Hadoop.</p>\n<p>Ce talk a pour but d’introduire Spark via un exemple de Machine Learning et de montrer en quoi il se différencie d’Hadoop. Nous terminerons par un tour d’horizon de l’écosystème de Spark.</p>\n","id":"TLK-532","speakers":[{"name":"Ludwine Probst","company":"-","id":"3130c80d7ebf93b0fe78e034fdb2a6cd0a76fb38","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/3130c80d7ebf93b0fe78e034fdb2a6cd0a76fb38","rel":"http://cfp.scala.io/api/profile/speaker","title":"Ludwine Probst"},"twitter":"@nivdul"}],"title":"Lightning fast Machine Learning with Spark","lang":"fr","summary":"Dans l’écosystème Big Data, Hadoop et MapReduce sont largement utilisés pour gérer le traitement des données à grande échelle. Cependant le modèle MapReduce montre des limites pour certains traitements, notamment des algorithmes itératifs utilisés en Machine Learning.\r\n\r\nSpark est un outil de traitement de données en mémoire offrant plus de flexibilité de programmation et de meilleures performances qu’Hadoop.\r\n\r\nCe talk a pour but d’introduire Spark via un exemple de Machine Learning et de montrer en quoi il se différencie d’Hadoop. Nous terminerons par un tour d’horizon de l’écosystème de Spark."},{"talkType":"Short conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Apache Spark is a fast cluster computing engine, written mainly in Scala. Apache Cassandra is a distributed database system, written mainly in Java. The presentation will show you how we integrated them, using Scala. The connector we&#x27;ve built allows you to query Cassandra from complex, distributed, parallel Spark applications written in Scala. The talk will cover how the whole system works from the user-perspective, its high level architecture and some implementation details, as well as which Scala features were very useful, and which turned out to be problematic and why.</p>\n","id":"XEK-617","speakers":[{"name":"Piotr Kołaczkowski","company":"DataStax","id":"e64637f6af424e0621c41c649c1a269eea9172c2","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/e64637f6af424e0621c41c649c1a269eea9172c2","rel":"http://cfp.scala.io/api/profile/speaker","title":"Piotr Kołaczkowski"},"twitter":"@pkolaczk"}],"title":"Lightning fast cluster computing with Cassandra and Spark","lang":"en","summary":"Apache Spark is a fast cluster computing engine, written mainly in Scala. Apache Cassandra is a distributed database system, written mainly in Java. The presentation will show you how we integrated them, using Scala. The connector we've built allows you to query Cassandra from complex, distributed, parallel Spark applications written in Scala. The talk will cover how the whole system works from the user-perspective, its high level architecture and some implementation details, as well as which Scala features were very useful, and which turned out to be problematic and why. "},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Finagle is the RPC library used to build services at Twitter, it is widely used on thousands of servers, and it processes billions of messages every day. It has been designed to be fast but also reusable and composable. Finagle employs a series of algorithms to achieve efficient load balancing, fast error discovery, and more. It is protocol agnostic and there are implementations for HTTP, Thrift, Memcache, Redis, MySQL and more.</p>\n<p>This talk will describe the abstractions exposed by Finagle, as well as a brief overview of its internals and some of the algorithms used under the hood.</p>\n","id":"OBQ-098","speakers":[{"name":"Steve Gury","company":"Twitter","id":"e4955ceef4650e69d35fb1733b4f0c22475f6329","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/e4955ceef4650e69d35fb1733b4f0c22475f6329","rel":"http://cfp.scala.io/api/profile/speaker","title":"Steve Gury"},"twitter":"@stevegury"}],"title":"Finagle: Twitter's RPC library","lang":"en","summary":"Finagle is the RPC library used to build services at Twitter, it is widely used on thousands of servers, and it processes billions of messages every day. It has been designed to be fast but also reusable and composable. Finagle employs a series of algorithms to achieve efficient load balancing, fast error discovery, and more. It is protocol agnostic and there are implementations for HTTP, Thrift, Memcache, Redis, MySQL and more.\r\n\r\nThis talk will describe the abstractions exposed by Finagle, as well as a brief overview of its internals and some of the algorithms used under the hood."},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>This talk aims to shed some light on how Scala&#x27;s type-level programming is essentially logic programming (sometimes with runtime benefits), and give reasoning for code, comprising 8+ implicit parameters with funny names (FnHipsterAux). It also explores some possibilities to use this fact to reimagine a better syntax for type-level computations in scala.\nFunctional in the small, OO in the large, logic in the type system!</p>\n","id":"WKU-122","speakers":[{"name":"George Leontiev","company":"SoundCloud Ltd.","id":"0b10a33518b31d55c3e10e58a16c69c6e5a86be7","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/0b10a33518b31d55c3e10e58a16c69c6e5a86be7","rel":"http://cfp.scala.io/api/profile/speaker","title":"George Leontiev"},"twitter":"@folone"}],"title":"There's a Prolog in your Scala!","lang":"en","summary":"This talk aims to shed some light on how Scala's type-level programming is essentially logic programming (sometimes with runtime benefits), and give reasoning for code, comprising 8+ implicit parameters with funny names (FnHipsterAux). It also explores some possibilities to use this fact to reimagine a better syntax for type-level computations in scala.\r\nFunctional in the small, OO in the large, logic in the type system!"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>The strange syntax and unfamiliar language used in Scalaz can often be a barrier to entry for using it. This talk aims to show what value you can get from using Scalaz in your projects, and help you comprehend some of the unusual terminology used.</p>\n","id":"DME-182","speakers":[{"name":"Noel Markham","company":"ITV","id":"c94470ff2ce2a0688cb0c4526f8506476b40285b","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c94470ff2ce2a0688cb0c4526f8506476b40285b","rel":"http://cfp.scala.io/api/profile/speaker","title":"Noel Markham"},"twitter":"@noelmarkham"}],"title":"Scalaz, or: how I learned to stop worrying and love monads","lang":"en","summary":"The strange syntax and unfamiliar language used in Scalaz can often be a barrier to entry for using it. This talk aims to show what value you can get from using Scalaz in your projects, and help you comprehend some of the unusual terminology used."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Writing proper tests just to ensure that your application does what it should is hard enough.  But how do developers also ensure that their applications are fault tolerant and scalable in the face of overwhelming load?  What tools can we use and how can they be applied?  This talk will discuss the best ways to verify that your application can withstand the challenges of production Reactive application deployment.</p>\n","id":"FZZ-539","speakers":[{"name":"Jamie Allen","company":"Typesafe","id":"ca691482622dd6837b89b6f2b4c96c0ad4756dc6","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/ca691482622dd6837b89b6f2b4c96c0ad4756dc6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jamie Allen"},"twitter":"@jamie-allen"}],"title":"Testing Reactive Applications","lang":"en","summary":"Writing proper tests just to ensure that your application does what it should is hard enough.  But how do developers also ensure that their applications are fault tolerant and scalable in the face of overwhelming load?  What tools can we use and how can they be applied?  This talk will discuss the best ways to verify that your application can withstand the challenges of production Reactive application deployment."},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Les principes de conception moderne d&#x27;application tel que CQRS et Event Sourcing ouvrent de nouvelles perspectives fonctionnelles et techniques.</p>\n<p>Au-delà de la théorie et des promesses, nous explorerons, lors de cette présentation, différentes générations de projets réalisés dans l&#x27;écosystème Scala et utilisant ces principes. Nous exposerons les avantages, inconvénients et détails d&#x27;implémentations de chacune des générations. Nous disséquerons, pour finir, une application de taille moyenne issue de ces différentes expériences.</p>\n","id":"YUT-615","speakers":[{"name":"Antoine Michel","company":"Zengularity","id":"5bc7d5aa043f1d8b92771153b7faf0be404fa5e6","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/5bc7d5aa043f1d8b92771153b7faf0be404fa5e6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Antoine Michel"},"twitter":null}],"title":"Architecture Applicative Moderne avec Scala dans la vraie vie","lang":"fr","summary":"Les principes de conception moderne d'application tel que CQRS et Event Sourcing ouvrent de nouvelles perspectives fonctionnelles et techniques.\r\n\r\nAu-delà de la théorie et des promesses, nous explorerons, lors de cette présentation, différentes générations de projets réalisés dans l'écosystème Scala et utilisant ces principes. Nous exposerons les avantages, inconvénients et détails d'implémentations de chacune des générations. Nous disséquerons, pour finir, une application de taille moyenne issue de ces différentes expériences."},{"talkType":"Conference","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>Data visualization plays an important part when exploring a dataset and when presenting/publishing results. Traditionally this field has been dominated by R and Python. But the Scala community has made an effort to catch up.\nI&#x27;ll present 3 tools that can be used for visualizations: Breeze, Scala Notebook and Sparkle. While these are far from being perfect, the case can be made to include Scala tools in a data analytics workflow.</p>\n","id":"SAZ-280","speakers":[{"name":"Stefan Chis","company":null,"id":"efd7e59e6036f47893cee322c2670a28e7b1a881","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/efd7e59e6036f47893cee322c2670a28e7b1a881","rel":"http://cfp.scala.io/api/profile/speaker","title":"Stefan Chis"},"twitter":null}],"title":"Data Visualization with Scala tools","lang":"en","summary":"Data visualization plays an important part when exploring a dataset and when presenting/publishing results. Traditionally this field has been dominated by R and Python. But the Scala community has made an effort to catch up.\r\nI'll present 3 tools that can be used for visualizations: Breeze, Scala Notebook and Sparkle. While these are far from being perfect, the case can be made to include Scala tools in a data analytics workflow."},{"talkType":"Quickie","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>parboiled2 is a Scala lib for fast and elegant parsing of arbitrary input text. It implements a macro-based parser generator offering these main benefits over Scala parser combinators:</p>\n<ol>\n<li>Several hundred (!) times higher parsing speed</li>\n<li>More concise/flexible/powerful DSL</li>\n<li>Significantly better error reporting</li>\n</ol>\n<p>In this talk I&#x27;ll show you how easy it is to write real-world parsers with pb2, compare them to alternatives and also take a peek under the hood to see how Scala macros and type-level programming can be combined to implement very powerful and yet fully type-safe &amp; fast internal DSLs.</p>\n","id":"LVN-400","speakers":[{"name":"Mathias Doenitz","company":null,"id":"845cfd93f1f9e5414b32adf93ae0e602f1aa443d","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/845cfd93f1f9e5414b32adf93ae0e602f1aa443d","rel":"http://cfp.scala.io/api/profile/speaker","title":"Mathias Doenitz"},"twitter":"@sirthias"}],"title":"parboiled2: better parsing in Scala","lang":"en","summary":"parboiled2 is a Scala lib for fast and elegant parsing of arbitrary input text. It implements a macro-based parser generator offering these main benefits over Scala parser combinators:\r\n\r\n1. Several hundred (!) times higher parsing speed\r\n2. More concise/flexible/powerful DSL\r\n3. Significantly better error reporting\r\n\r\nIn this talk I'll show you how easy it is to write real-world parsers with pb2, compare them to alternatives and also take a peek under the hood to see how Scala macros and type-level programming can be combined to implement very powerful and yet fully type-safe & fast internal DSLs."},{"talkType":"Conference","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>As more data becomes available through open data initiatives, opportunities to analyze and predict behavior in the real world grow exponentially.\nOpen Data projects such as OpenStreetMaps are now more precise than their commercial equivalent, to which we can also add massive amounts of urban open data. Yet, very little intelligence has been derived from them due to the complexity of dealing with datasets at that scale.\nIn this talk, we&#x27;ll show how to use graph enabled distributed frameworks like GraphX to turn raw urban data into actionnable intelligence.</p>\n","id":"TCN-675","speakers":[{"name":"Rand Hindi","company":":snips","id":"25ae8f70c4552c7f139f419cc885244b7cecdfd9","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/25ae8f70c4552c7f139f419cc885244b7cecdfd9","rel":"http://cfp.scala.io/api/profile/speaker","title":"Rand Hindi"},"twitter":"@randhindi"},{"name":"Andy Petrella","company":"NextLab","id":"9b2e20fad305a29b440dce821bace429daf1a864","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/9b2e20fad305a29b440dce821bace429daf1a864","rel":"http://cfp.scala.io/api/profile/speaker","title":"Andy Petrella"},"twitter":"@noootsab"}],"title":"Large Road-Network analysis with GraphX","lang":"en","summary":"As more data becomes available through open data initiatives, opportunities to analyze and predict behavior in the real world grow exponentially. \r\nOpen Data projects such as OpenStreetMaps are now more precise than their commercial equivalent, to which we can also add massive amounts of urban open data. Yet, very little intelligence has been derived from them due to the complexity of dealing with datasets at that scale.\r\nIn this talk, we'll show how to use graph enabled distributed frameworks like GraphX to turn raw urban data into actionnable intelligence."},{"talkType":"Conference","track":"Alternate languages","audienceLevel":"intermediate","summaryAsHtml":"<p>Jepsen est un outil développé en Clojure par Kyle Kingsbury pour tester la cohérence de diverses bases de données répartis. Dans cette conférence vous apprendrez à utiliser Jepsen pour tester n&#x27;importe quel système réparti au travers d&#x27;un exemple concret: l&#x27;écriture de tests pour Barge (http://github.com/mgodave/barge), une implémentation Java de Raft. Où l&#x27;on montrera comment Jepsen, Clojure et l&#x27;environnement de développement LightTable facilitent l&#x27;écriture, la mise au point et l&#x27;exécution de tels tests.</p>\n","id":"MXN-947","speakers":[{"name":"Arnaud Bailly","company":"FoldLabs","id":"b44762e339109864aa1a9c96230f82c695ce88ca","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/b44762e339109864aa1a9c96230f82c695ce88ca","rel":"http://cfp.scala.io/api/profile/speaker","title":"Arnaud Bailly"},"twitter":"@abailly"}],"title":"Tester son système réparti avec Jepsen","lang":"fr","summary":"Jepsen est un outil développé en Clojure par Kyle Kingsbury pour tester la cohérence de diverses bases de données répartis. Dans cette conférence vous apprendrez à utiliser Jepsen pour tester n'importe quel système réparti au travers d'un exemple concret: l'écriture de tests pour Barge (http://github.com/mgodave/barge), une implémentation Java de Raft. Où l'on montrera comment Jepsen, Clojure et l'environnement de développement LightTable facilitent l'écriture, la mise au point et l'exécution de tels tests."},{"talkType":"Conference","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>We are at a time where biotech allow us to get personal genomes for $1000. Tremendous progress since the 70s in DNA sequencing have been done, e.g. more samples in an experiment, more genomic coverages at higher speeds.\nGenomic analysis standards that have been developed over the years weren&#x27;t designed with scalability and adaptability in mind.\nIn this talk, we’ll present a game changing technology in this area, ADAM, initiated by the AMPLab at Berkeley.\nADAM is framework based on Apache Spark and the Parquet storage.\nWe’ll see how it can speed up a sequence reconstruction to a factor 150.</p>\n","id":"SVK-108","speakers":[{"name":"Andy Petrella","company":"NextLab","id":"9b2e20fad305a29b440dce821bace429daf1a864","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/9b2e20fad305a29b440dce821bace429daf1a864","rel":"http://cfp.scala.io/api/profile/speaker","title":"Andy Petrella"},"twitter":"@noootsab"},{"name":"Xavier Tordoir","company":"SilicoCloud","id":"8de8305f503762e697fbf0f9f1b4eda17c6544e9","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/8de8305f503762e697fbf0f9f1b4eda17c6544e9","rel":"http://cfp.scala.io/api/profile/speaker","title":"Xavier Tordoir"},"twitter":"@xtordoir"}],"title":"Scalable Genomics with ADAM","lang":"en","summary":"We are at a time where biotech allow us to get personal genomes for $1000. Tremendous progress since the 70s in DNA sequencing have been done, e.g. more samples in an experiment, more genomic coverages at higher speeds.\r\nGenomic analysis standards that have been developed over the years weren't designed with scalability and adaptability in mind.\r\nIn this talk, we’ll present a game changing technology in this area, ADAM, initiated by the AMPLab at Berkeley.\r\nADAM is framework based on Apache Spark and the Parquet storage. \r\nWe’ll see how it can speed up a sequence reconstruction to a factor 150."},{"talkType":"Conference","track":"Other","audienceLevel":"intermediate","summaryAsHtml":"<p>L&#x27;Event Sourcing est une technique de persistance consistant à sauver les évènements du système plutôt que son état.</p>\n<p>Bien qu&#x27;ayant gagné en notoriété dans les communauté C# et Java depuis quelques années, l&#x27;Event Sourcing est avant tout adapté à la programmation fonctionnelle.</p>\n<p>A l&#x27;aide d&#x27;un exemple complet, nous verrons comment immutabilité, composition et agents lui donnent tout son sens, et rendent son écriture limpide, laissant alors la place à un code orienté domaine totalement pur.</p>\n","id":"DWP-340","speakers":[{"name":"Jérémie Chassaing","company":null,"id":"c525b410d66cd31e32809f2ae1202b2885d1bc27","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c525b410d66cd31e32809f2ae1202b2885d1bc27","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jérémie Chassaing"},"twitter":"@thinkb4coding"}],"title":"Event Sourcing <3 Functional Programming","lang":"fr","summary":"L'Event Sourcing est une technique de persistance consistant à sauver les évènements du système plutôt que son état.\r\n\r\nBien qu'ayant gagné en notoriété dans les communauté C# et Java depuis quelques années, l'Event Sourcing est avant tout adapté à la programmation fonctionnelle.\r\n\r\nA l'aide d'un exemple complet, nous verrons comment immutabilité, composition et agents lui donnent tout son sens, et rendent son écriture limpide, laissant alors la place à un code orienté domaine totalement pur.\r\n"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>In a Scala/Slick we deal with data and persistence in a totally different way if compared with the OOP/ORM world. Our model are immutable structures (case classes and tuples), nullable columns are mapped to Options, relations are expressed by id references instead of object associations.</p>\n<p>In this talk we&#x27;ll show how to implement an type-safe Active Record Pattern using Slick and how to promote your database rows to first-class citizens and embrace a totally different way of modeling.</p>\n","id":"RMH-144","speakers":[{"name":"Renato Cavalcanti","company":"Strong[Typed]","id":"7cae30b6998e8b2822fa9022bd2be41454b0dd56","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/7cae30b6998e8b2822fa9022bd2be41454b0dd56","rel":"http://cfp.scala.io/api/profile/speaker","title":"Renato Cavalcanti"},"twitter":"@renatocaval"}],"title":"Implementing the Active Record Pattern in Slick","lang":"en","summary":"In a Scala/Slick we deal with data and persistence in a totally different way if compared with the OOP/ORM world. Our model are immutable structures (case classes and tuples), nullable columns are mapped to Options, relations are expressed by id references instead of object associations. \r\n\r\nIn this talk we'll show how to implement an type-safe Active Record Pattern using Slick and how to promote your database rows to first-class citizens and embrace a totally different way of modeling."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Vous avez entendu parler des acteurs Akka et vous vous demandez quels types d’architectures vous pouvez mettre en place, ou comment les intégrer dans votre architecture ? Et quelle est la courbe d’apprentissage ?\nA travers un retour d’expérience, nous répondrons à ces questions et vous montrerons comment en trois mois nous avons mis en place une architecture basée sur Akka et Spray en Scala. Nous évoquerons les problématiques de performance et de tolérance aux pannes avec les superviseurs. Nous verrons aussi pourquoi il est important d’avoir du monitoring et de mettre en place des tests.</p>\n","id":"REN-413","speakers":[{"name":"Nicolas Jozwiak","company":"Xebia","id":"15ffd1f50c6ba6e95c6379db886c1de9b77fd180","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/15ffd1f50c6ba6e95c6379db886c1de9b77fd180","rel":"http://cfp.scala.io/api/profile/speaker","title":"Nicolas Jozwiak"},"twitter":"@njozwiak"}],"title":"Superviser vos actors Akka","lang":"fr","summary":"Vous avez entendu parler des acteurs Akka et vous vous demandez quels types d’architectures vous pouvez mettre en place, ou comment les intégrer dans votre architecture ? Et quelle est la courbe d’apprentissage ?\r\nA travers un retour d’expérience, nous répondrons à ces questions et vous montrerons comment en trois mois nous avons mis en place une architecture basée sur Akka et Spray en Scala. Nous évoquerons les problématiques de performance et de tolérance aux pannes avec les superviseurs. Nous verrons aussi pourquoi il est important d’avoir du monitoring et de mettre en place des tests."},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>Scala has a powerful type system that allows many properties of a program to be verified at compile-time.  Do you still think of types as Int, String and Object? Types like &quot;Fold[Nat, ({ type L[X &lt;: HList, Z &lt;: Nat] = Succ[Z] })#L, Nat._0]&quot; are only a small step away. You can have the compiler perform computations on natural numbers, enforce the sizes of collections and always get the correct element type out of a heterogeneous list. All of that happens at compile-time without impacting the runtime performance of your code.</p>\n","id":"CUP-414","speakers":[{"name":"Stefan Zeiger","company":"Typesafe","id":"4efd627cb19fe4cacde8b01751b0475ea797214c","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/4efd627cb19fe4cacde8b01751b0475ea797214c","rel":"http://cfp.scala.io/api/profile/speaker","title":"Stefan Zeiger"},"twitter":"@StefanZeiger"}],"title":"Type-Level Computations in Scala","lang":"en","summary":"Scala has a powerful type system that allows many properties of a program to be verified at compile-time.  Do you still think of types as Int, String and Object? Types like \"Fold[Nat, ({ type L[X <: HList, Z <: Nat] = Succ[Z] })#L, Nat._0]\" are only a small step away. You can have the compiler perform computations on natural numbers, enforce the sizes of collections and always get the correct element type out of a heterogeneous list. All of that happens at compile-time without impacting the runtime performance of your code."},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"novice","summaryAsHtml":"<p>Le Type-Directed Development (développement guidé par les types) est une manière très puissante d&#x27;écrire des programmes. À l&#x27;instar du Test-Driven Development, l&#x27;idée est d&#x27;écrire une spécification avant d&#x27;écrire le code. Ici la spécification ne sera pas du test unitaire mais les types.\nDans cette présentation je montrerai pourquoi, quand et comment il est possible d&#x27;utiliser des méthodes de TypeDD pour écrire des programmes sans prise de tête et avec plus d&#x27;assurance.\nJe montrerai aussi les liens entre TypeDD et TestDD et comment les combiner pour un maximum d&#x27;efficacité.</p>\n","id":"ZWW-535","speakers":[{"name":"Clément Delafargue","company":"Penazen consulting","id":"445b511ffee321008e83539fe7d5689004eca7e1","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/445b511ffee321008e83539fe7d5689004eca7e1","rel":"http://cfp.scala.io/api/profile/speaker","title":"Clément Delafargue"},"twitter":"@clementd"}],"title":"TDD, comme dans Type Driven Development","lang":"fr","summary":"Le Type-Directed Development (développement guidé par les types) est une manière très puissante d'écrire des programmes. À l'instar du Test-Driven Development, l'idée est d'écrire une spécification avant d'écrire le code. Ici la spécification ne sera pas du test unitaire mais les types.\r\nDans cette présentation je montrerai pourquoi, quand et comment il est possible d'utiliser des méthodes de TypeDD pour écrire des programmes sans prise de tête et avec plus d'assurance.\r\nJe montrerai aussi les liens entre TypeDD et TestDD et comment les combiner pour un maximum d'efficacité."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>An exploration of building beautiful REST APIs in Scala with Scalatra, Swagger, and Akka. With the ease of deployment &amp; configuration of Scalatra, it is simple to build the basic core of a good REST API. Combined with Swagger, documentation of these APIs becomes almost trivial – allowing easy collaboration with frontend developers interacting with your API.</p>\n<p>When more complex tasks are necessary – such as long running processes that shouldn&#x27;t block the HTTP request, Akka can be integrated to Scalatra. We&#x27;ll explore how to use this for Futures, processing Daemons and other clever tricks.</p>\n","id":"LKC-550","speakers":[{"name":"Brendan McAdams","company":"Netflix","id":"15146d1465d0539ebbb320dc877632f0970de101","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/15146d1465d0539ebbb320dc877632f0970de101","rel":"http://cfp.scala.io/api/profile/speaker","title":"Brendan McAdams"},"twitter":"@rit"}],"title":"Beautiful APIs with Scala, Scalatra, Swagger, and Akka","lang":"en","summary":"An exploration of building beautiful REST APIs in Scala with Scalatra, Swagger, and Akka. With the ease of deployment & configuration of Scalatra, it is simple to build the basic core of a good REST API. Combined with Swagger, documentation of these APIs becomes almost trivial – allowing easy collaboration with frontend developers interacting with your API.\r\n\r\nWhen more complex tasks are necessary – such as long running processes that shouldn't block the HTTP request, Akka can be integrated to Scalatra. We'll explore how to use this for Futures, processing Daemons and other clever tricks."},{"talkType":"Conference","track":"Alternate languages","audienceLevel":"intermediate","summaryAsHtml":"<p>Rust est un nouveau langage de programmation créé par Mozilla pour allier la performance et le contrôle fournis par les langages de programmation système traditionnels tels C++ et la sûreté du typage statique fort.\nCette présentation se veut une présentation générale de Rust, en mettant l&#x27;accent sur les aspects nouveaux, notamment le système de gestion de la mémoire</p>\n","id":"DKA-157","speakers":[{"name":"Léo Testard","company":"UPMC","id":"0975ef1112319f9f82a58aa5db8494002ed59c7c","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/0975ef1112319f9f82a58aa5db8494002ed59c7c","rel":"http://cfp.scala.io/api/profile/speaker","title":"Léo Testard"},"twitter":"@Leo_Testard"}],"title":"Sûreté mémoire avec Rust","lang":"fr","summary":"Rust est un nouveau langage de programmation créé par Mozilla pour allier la performance et le contrôle fournis par les langages de programmation système traditionnels tels C++ et la sûreté du typage statique fort.\r\nCette présentation se veut une présentation générale de Rust, en mettant l'accent sur les aspects nouveaux, notamment le système de gestion de la mémoire"},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>dans l’approche traditionnelle, nous testons généralement un cas d’usage d’une fonction en lui passant un paramètre et en attendant un certain retour.</p>\n<p>L’approche « property based testing » permet de décrire les propriétés qui définissent une fonction. Cette approche est intéressante pour valider des lois afférentes à un objet (ex un Monoid ou une Monade), pour effectuer du refactoring etc…</p>\n<p>Dans cette session, nous verrons comment ScalaCheck nous aide à définir les propriétés des fonctions que nous souhaitons tester, ainsi que la manière de définir des générateurs de cas de test.</p>\n","id":"GGB-058","speakers":[{"name":"David Galichet","company":"freelance","id":"7c2c2b2aaa1c1216878348ed70c5402c21d2183a","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/7c2c2b2aaa1c1216878348ed70c5402c21d2183a","rel":"http://cfp.scala.io/api/profile/speaker","title":"David Galichet"},"twitter":"@dgalichet"}],"title":"Une nouvelle approche du test avec ScalaCheck et le \"Property Based Testing\"","lang":"fr","summary":"dans l’approche traditionnelle, nous testons généralement un cas d’usage d’une fonction en lui passant un paramètre et en attendant un certain retour.\r\n\r\nL’approche « property based testing » permet de décrire les propriétés qui définissent une fonction. Cette approche est intéressante pour valider des lois afférentes à un objet (ex un Monoid ou une Monade), pour effectuer du refactoring etc…\r\n\r\nDans cette session, nous verrons comment ScalaCheck nous aide à définir les propriétés des fonctions que nous souhaitons tester, ainsi que la manière de définir des générateurs de cas de test."},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>Everybody knows monads by now, so a talk about monads would hardly be worthwhile. Let&#x27;s take it to the next level: monad transformers. We&#x27;ll learn what they are, how they naturally emerge in your code base and how to make good use of them in Scala – and maybe even how to create your own.</p>\n","id":"BGS-827","speakers":[{"name":"Lars Hupel","company":"TU München","id":"2f1f74d0573b8f87130b3445d05fbaffe60519a6","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/2f1f74d0573b8f87130b3445d05fbaffe60519a6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Lars Hupel"},"twitter":"@larsr_h"}],"title":"OptimusPrimeT","lang":"en","summary":"Everybody knows monads by now, so a talk about monads would hardly be worthwhile. Let's take it to the next level: monad transformers. We'll learn what they are, how they naturally emerge in your code base and how to make good use of them in Scala – and maybe even how to create your own."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Your company has servers distributed around the world and you need to process data in a centralised location. The data is produced by applications using different technology stacks and comes from various sources, from web servers to sensors. How could you solve this problem? Enter RabbitMQ.</p>\n<p>We will present an example of how to build a system like this one by using RabbitMQ Federation to replicate data across AWS Regions and RabbitMQ support for many protocols to produce/consume data.</p>\n<p>To help with scalability we are going to show an interesting way to implement sharded queues with RabbitMQ by using the Consistent Hash Exchange.</p>\n<p>If you want to learn what else has RabbitMQ to offer beyond messaging and queueing then this is the talk for you</p>\n","id":"BAH-402","speakers":[{"name":"Alvaro Videla","company":"Pivotal / RabbitMQ","id":"89f5712e918c62ff0e1fcb9cf33274605f744439","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/89f5712e918c62ff0e1fcb9cf33274605f744439","rel":"http://cfp.scala.io/api/profile/speaker","title":"Alvaro Videla"},"twitter":"@old_sound"}],"title":"Building a Distributed Data Ingestion System with RabbitMQ","lang":"en","summary":"Your company has servers distributed around the world and you need to process data in a centralised location. The data is produced by applications using different technology stacks and comes from various sources, from web servers to sensors. How could you solve this problem? Enter RabbitMQ.\r\n\r\nWe will present an example of how to build a system like this one by using RabbitMQ Federation to replicate data across AWS Regions and RabbitMQ support for many protocols to produce/consume data.\r\n\r\nTo help with scalability we are going to show an interesting way to implement sharded queues with RabbitMQ by using the Consistent Hash Exchange.\r\n\r\nIf you want to learn what else has RabbitMQ to offer beyond messaging and queueing then this is the talk for you"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Shapeless all the things !!</p>\n<p>Without any doubt, Shapeless is one of the most interesting libraries in the Scala ecosystem.\nAlthough it started as an exploration of Scala&#x27;s capabilities for dependent type based generic programming, it is now production ready.</p>\n<p>Despite it&#x27;s undeniable values, few developers have actually played with it. Even fewer are using it in production.</p>\n<p>In this talk, we&#x27;ll show real world use cases of shapeless. Most of them are or will be deployed in, critical, customer facing applications. We&#x27;ll show how shapeless can make your code both safer, shorter and more fun(ctional).</p>\n","id":"YSL-235","speakers":[{"name":"Julien Tournay","company":"MFG labs","id":"b8811db9a15d13a1bbfe57fde72970195671ece7","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/b8811db9a15d13a1bbfe57fde72970195671ece7","rel":"http://cfp.scala.io/api/profile/speaker","title":"Julien Tournay"},"twitter":"@skaalf"}],"title":"Shapeless all the things !!","lang":"en","summary":"Shapeless all the things !!\r\n\r\nWithout any doubt, Shapeless is one of the most interesting libraries in the Scala ecosystem. \r\nAlthough it started as an exploration of Scala's capabilities for dependent type based generic programming, it is now production ready.\r\n\r\nDespite it's undeniable values, few developers have actually played with it. Even fewer are using it in production.\r\n\r\nIn this talk, we'll show real world use cases of shapeless. Most of them are or will be deployed in, critical, customer facing applications. We'll show how shapeless can make your code both safer, shorter and more fun(ctional)."},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"expert","summaryAsHtml":"<p>(French Spoken / English Slides)\nUn voyage impressionniste plongeant dans les profondeurs des concepts présentés par Runar Bjarnason à ScalaDays (&quot;Composable application architecture with reasonably priced monads&quot;) où il décrivait une vision généralisée &amp; purement fonctionnelle de la DI. Nous y rencontrerons des créatures étranges mais attachantes comme les FreeMonads, les Coproducts et les Coyoneda. Puis, nous nous aventurerons prudemment dans les contrées sauvages des curieux problèmes de performances liés aux FreeMonads et comment leur résolution peut devenir source d&#x27;inspiration.</p>\n","id":"CAZ-003","speakers":[{"name":"Pascal Voitot","company":"MFGLabs","id":"dcb0eb5447a18bb98c1eed2f07c06ec40612c6f5","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/dcb0eb5447a18bb98c1eed2f07c06ec40612c6f5","rel":"http://cfp.scala.io/api/profile/speaker","title":"Pascal Voitot"},"twitter":"@mandubian"}],"title":"20.000 lieues sous les FreeMonads Coproducts & la DI purement fonctionnelle","lang":"fr","summary":"(French Spoken / English Slides)\r\nUn voyage impressionniste plongeant dans les profondeurs des concepts présentés par Runar Bjarnason à ScalaDays (\"Composable application architecture with reasonably priced monads\") où il décrivait une vision généralisée & purement fonctionnelle de la DI. Nous y rencontrerons des créatures étranges mais attachantes comme les FreeMonads, les Coproducts et les Coyoneda. Puis, nous nous aventurerons prudemment dans les contrées sauvages des curieux problèmes de performances liés aux FreeMonads et comment leur résolution peut devenir source d'inspiration."},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Nous avons utilisé Play/Scala/Akka/Reactivemongo pour moderniser une application web monolithique et partiellement endetté. Dans ce talk je vous présenterai ce que nous avons appris dans ce parcours. Nous parlerons du refactoring de l’architecture existante, de la migration des données de SQL vers Mongo DB et du développement d’une API REST avec Play. Nous aborderons également les tests avec Play et MongoDB et quelques bonnes pratiques pour contenir la complexité du code Scala.</p>\n","id":"CJR-970","speakers":[{"name":"Nouhoum Traoré","company":"Arolla","id":"103e8bf8d2940358330c08667048cd3040812a13","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/103e8bf8d2940358330c08667048cd3040812a13","rel":"http://cfp.scala.io/api/profile/speaker","title":"Nouhoum Traoré"},"twitter":"@nouhoumtraore"}],"title":"Moderniser une application legacy avec Play, Scala et Mongo DB","lang":"fr","summary":"Nous avons utilisé Play/Scala/Akka/Reactivemongo pour moderniser une application web monolithique et partiellement endetté. Dans ce talk je vous présenterai ce que nous avons appris dans ce parcours. Nous parlerons du refactoring de l’architecture existante, de la migration des données de SQL vers Mongo DB et du développement d’une API REST avec Play. Nous aborderons également les tests avec Play et MongoDB et quelques bonnes pratiques pour contenir la complexité du code Scala."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>In the <em>live-coding-only</em> talk we&#x27;ll walk through some of the features of DI containers and see if we can replace them with pure, type-safe Scala code. We&#x27;ll start with &quot;manual&quot; DI, followed by using MacWire. With one simple <code>wire[]</code> macro, we can save a lot of typing and still use only Scala language features for creating the object graph at runtime.</p>\n<p>We’ll then see how to declaratively implement an interceptor, and that it’s far easier than it may seem.</p>\n<p>Finally, we&#x27;ll take a look at the <em>“Thin Cake Pattern”</em>, and how to use traits to create and compose module.</p>\n","id":"ZHF-531","speakers":[{"name":"Adam Warski","company":"http://www.softwaremill.com","id":"8b38094e6df85bd4b71c7687897337bcad330862","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/8b38094e6df85bd4b71c7687897337bcad330862","rel":"http://cfp.scala.io/api/profile/speaker","title":"Adam Warski"},"twitter":"@adamwarski"}],"title":"The framework-less Scala Dependency Injection framework","lang":"en","summary":"In the *live-coding-only* talk we'll walk through some of the features of DI containers and see if we can replace them with pure, type-safe Scala code. We'll start with \"manual\" DI, followed by using MacWire. With one simple `wire[]` macro, we can save a lot of typing and still use only Scala language features for creating the object graph at runtime.\r\n\r\nWe’ll then see how to declaratively implement an interceptor, and that it’s far easier than it may seem.\r\n\r\nFinally, we'll take a look at the *“Thin Cake Pattern”*, and how to use traits to create and compose module."},{"talkType":"Quickie","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"novice","summaryAsHtml":"<p>Jon will take you on a whirlwind tour of a tiny (but useful) application, showcasing the simplicity of Rapture&#x27;s intuitive APIs for everyday programming tasks. If you work with JSON, I/O, cryptography and command-line applications, you should see this talk!</p>\n","id":"MJO-211","speakers":[{"name":"Jon Pretty","company":"Typelevel & Propensive","id":"91e1d5b41eb4349a787d31252d448085e505fc25","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/91e1d5b41eb4349a787d31252d448085e505fc25","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jon Pretty"},"twitter":"@propensive"}],"title":"Rapid Rapture!","lang":"en","summary":"Jon will take you on a whirlwind tour of a tiny (but useful) application, showcasing the simplicity of Rapture's intuitive APIs for everyday programming tasks. If you work with JSON, I/O, cryptography and command-line applications, you should see this talk!"},{"talkType":"Conference","track":"Alternate languages","audienceLevel":"novice","summaryAsHtml":"<p>The web browser is the world’s most ubiquitous user interface. Sadly, this means we’re all basically stuck in an abusive relationship with JavaScript</p>\n<p>At first glance, PureScript looks and feels like Haskell, but there’s hardly any extraneous machinery. The PureScript compiler generates very concise JS, and the language itself is designed with the platform’s constraints in mind.</p>\n<p>It turned out to be a delight, getting out of my tangled mess of JavaScript and rebuilding it all in PureScript, and I’d like to show you how and why.</p>\n","id":"JHI-610","speakers":[{"name":"Bodil Stokke","company":null,"id":"71f297e752f419631e6d36b51030a8310f42ba7b","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/71f297e752f419631e6d36b51030a8310f42ba7b","rel":"http://cfp.scala.io/api/profile/speaker","title":"Bodil Stokke"},"twitter":"bodil"}],"title":"Purescript (Maybe this time we get Javascript right)","lang":"en","summary":"The web browser is the world’s most ubiquitous user interface. Sadly, this means we’re all basically stuck in an abusive relationship with JavaScript\r\n\r\nAt first glance, PureScript looks and feels like Haskell, but there’s hardly any extraneous machinery. The PureScript compiler generates very concise JS, and the language itself is designed with the platform’s constraints in mind.\r\n\r\nIt turned out to be a delight, getting out of my tangled mess of JavaScript and rebuilding it all in PureScript, and I’d like to show you how and why."},{"talkType":"Short conference","track":"Scala as a language","audienceLevel":"intermediate","summaryAsHtml":"<p>Did you know that types are propositions and that programs are their proofs?  You may have heard that before but have you ever wondered what it means?</p>\n<p>In this short talk, I will simply go through the proof of a very simple theorem, and show the intuitions behind the Curry-Howard isomorphism that will let us extract a program from our proof!</p>\n","id":"NGJ-113","speakers":[{"name":"Alexandre Bertails","company":"Pellucid Analytics","id":"bdb6a690bd8901285115b58413cb3b9821ffece2","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/bdb6a690bd8901285115b58413cb3b9821ffece2","rel":"http://cfp.scala.io/api/profile/speaker","title":"Alexandre Bertails"},"twitter":"@bertails"}],"title":"Let Curry-Howard code for me","lang":"en","summary":"Did you know that types are propositions and that programs are their proofs?  You may have heard that before but have you ever wondered what it means?\r\n\r\nIn this short talk, I will simply go through the proof of a very simple theorem, and show the intuitions behind the Curry-Howard isomorphism that will let us extract a program from our proof!"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Find out the architecture Netflix (producers of such fine entertainment as &quot;Lillyhammer&quot; &amp; &quot;Arrested Development&quot;) is using for their next generation device metadata APIs – specifically, the tech stack &amp; development+deployment processes. We will explore demonstrate real world use cases which make Scala stand out as a choice programming language for for building clean, beautiful, RESTful APIs with tools such as Swagger+Scalatra. Techniques will be demonstrated for producing &amp; consuming JSON (json4s), as well as sending HTTP Requests (Dispatch), using MySQL &amp; Cassandra, and Caching.  We will also explore Scala testing frameworks, and how they plug into our larger CI/CD infrastructure, with additional discussions of Netflix OSS components.</p>\n","id":"WEI-579","speakers":[{"name":"Brendan McAdams","company":"Netflix","id":"15146d1465d0539ebbb320dc877632f0970de101","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/15146d1465d0539ebbb320dc877632f0970de101","rel":"http://cfp.scala.io/api/profile/speaker","title":"Brendan McAdams"},"twitter":"@rit"}],"title":"Scala at Netflix","lang":"en","summary":"Find out the architecture Netflix (producers of such fine entertainment as \"Lillyhammer\" & \"Arrested Development\") is using for their next generation device metadata APIs – specifically, the tech stack & development+deployment processes. We will explore demonstrate real world use cases which make Scala stand out as a choice programming language for for building clean, beautiful, RESTful APIs with tools such as Swagger+Scalatra. Techniques will be demonstrated for producing & consuming JSON (json4s), as well as sending HTTP Requests (Dispatch), using MySQL & Cassandra, and Caching.  We will also explore Scala testing frameworks, and how they plug into our larger CI/CD infrastructure, with additional discussions of Netflix OSS components."},{"talkType":"Quickie","track":"Other","audienceLevel":"intermediate","summaryAsHtml":"<p>Distributed consensus is at the heart of most distributed algorithms requiring consistency. This short talk is a practical introduction to how Raft, a novel distributed consensus algorithm, works. We shall provide participants an intuition on how it works and why it is useful through a demonstration of Raft in action.</p>\n","id":"KLQ-645","speakers":[{"name":"Arnaud Bailly","company":"FoldLabs","id":"b44762e339109864aa1a9c96230f82c695ce88ca","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/b44762e339109864aa1a9c96230f82c695ce88ca","rel":"http://cfp.scala.io/api/profile/speaker","title":"Arnaud Bailly"},"twitter":"@abailly"}],"title":"Raft: Distributed Consensus for Dummies","lang":"en","summary":"Distributed consensus is at the heart of most distributed algorithms requiring consistency. This short talk is a practical introduction to how Raft, a novel distributed consensus algorithm, works. We shall provide participants an intuition on how it works and why it is useful through a demonstration of Raft in action."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>Spray&#x27;s routing DSL is an incredibly powerful toolkit for writing high-performance\nREST APIs. It takes care of every aspect of Http request handling and response\nbuilding in an elegant, readable, and highly functional way.</p>\n<p>But as the saying goes (sort of): with great power comes a great learning curve!</p>\n<p>This session will start with an introduction to the Spray/Akka-http routing DSL,\nmaking sure to go beyond the basics. It will also show examples of real-world\napplication code to give you a feeling for what the end result looks like. The\nsession will conclude with a discussion of some things to watch out for on your\nway to becoming an expert user.</p>\n","id":"IKO-309","speakers":[{"name":"Age Mooij","company":"Xebia","id":"49b2f73baea80ba44152cc643eef9a8c334680d7","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/49b2f73baea80ba44152cc643eef9a8c334680d7","rel":"http://cfp.scala.io/api/profile/speaker","title":"Age Mooij"},"twitter":"@agemooij"}],"title":"Beyond URL Matching: Mastering the Spray/Akka-Http Routing DSL","lang":"en","summary":"Spray's routing DSL is an incredibly powerful toolkit for writing high-performance\r\nREST APIs. It takes care of every aspect of Http request handling and response\r\nbuilding in an elegant, readable, and highly functional way.\r\n\r\nBut as the saying goes (sort of): with great power comes a great learning curve!\r\n\r\nThis session will start with an introduction to the Spray/Akka-http routing DSL,\r\nmaking sure to go beyond the basics. It will also show examples of real-world\r\napplication code to give you a feeling for what the end result looks like. The\r\nsession will conclude with a discussion of some things to watch out for on your\r\nway to becoming an expert user."},{"talkType":"Quickie","track":"Scala as a language","audienceLevel":"novice","summaryAsHtml":"<p>Lorsque l&#x27;on découvre le language Scala, on est absorbé par une multitude de nouveaux concepts liés à la programmation fonctionnelle et au language en lui-même.</p>\n<p>Parmis toutes ces nouveautés, le type Option a retenu mon attention. Il permet d’adresser certaines problématiques du quotidien d’un développeur de manière efficace et élégante.</p>\n<p>Sous la forme d&#x27;un live coding, je vous propose de répondre à ces 2 questions : pourquoi, comment l&#x27;utiliser?.</p>\n","id":"HJZ-215","speakers":[{"name":"Fabrice Sznajderman","company":"Sfeir","id":"4c198f87a8d1d2b3830fbc98968de75b6b58f712","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/4c198f87a8d1d2b3830fbc98968de75b6b58f712","rel":"http://cfp.scala.io/api/profile/speaker","title":"Fabrice Sznajderman"},"twitter":"@fsznajderman"}],"title":"Le pourquoi du comment du type Option","lang":"fr","summary":"Lorsque l'on découvre le language Scala, on est absorbé par une multitude de nouveaux concepts liés à la programmation fonctionnelle et au language en lui-même. \r\n\r\nParmis toutes ces nouveautés, le type Option a retenu mon attention. Il permet d’adresser certaines problématiques du quotidien d’un développeur de manière efficace et élégante.\r\n\r\nSous la forme d'un live coding, je vous propose de répondre à ces 2 questions : pourquoi, comment l'utiliser?.  "},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Talenthouse is a Los-Angeles based start-up offering an online platform for creative collaboration and brand advertisement with over 3 million users. In the end of 2013 it became clear that the existing platform was not performing well enough anymore and that a new system had to be built, and all of its data migrated - in one &quot;big-bang&quot; week-end.</p>\n<p>This is the story of how <a href=\"http://akka.io\">Akka</a> was used to build an entirely reactive, high-throughput, failure-tolerant data migration pipeline, fetching data from multiple databases, cloud storages, YouTube, SoundCloud and other locations.</p>\n","id":"FMG-782","speakers":[{"name":"Manuel Bernhardt","company":"Freelance","id":"bed2455ec833a11470efacf9bbd17d5b57a1e36d","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/bed2455ec833a11470efacf9bbd17d5b57a1e36d","rel":"http://cfp.scala.io/api/profile/speaker","title":"Manuel Bernhardt"},"twitter":"@elmanu"}],"title":"Back to the future: actors and pipes - using Akka for large-scale data migration","lang":"en","summary":"Talenthouse is a Los-Angeles based start-up offering an online platform for creative collaboration and brand advertisement with over 3 million users. In the end of 2013 it became clear that the existing platform was not performing well enough anymore and that a new system had to be built, and all of its data migrated - in one \"big-bang\" week-end.\r\n\r\nThis is the story of how [Akka](http://akka.io) was used to build an entirely reactive, high-throughput, failure-tolerant data migration pipeline, fetching data from multiple databases, cloud storages, YouTube, SoundCloud and other locations."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"novice","summaryAsHtml":"<p>Nous avons tous lu quelque part que &quot;SBT c&#x27;est compliqué&quot;, &quot;Mieux vaut éviter SBT dans un premier temps&quot; et que Maven lui est préférable.</p>\n<p>Je vais tâcher de vous montrer que SBT est finalement plus simple qu&#x27;il n&#x27;y paraît, qu&#x27;il dispose de plusieurs outils pour vous aider à mieux le connaître et l&#x27;utiliser et de démystifier SBT en général.\nLes concepts de Settings et de Tasks, les commandes &#x27;show&#x27; et &#x27;inspect&#x27; n&#x27;auront plus de secrets pour vous !\nJe présenterais aussi quelques techniques pour vous aider à garder votre build simple, bien organisé et facile à comprendre.</p>\n","id":"ZLH-470","speakers":[{"name":"Pierre Dal-Pra","company":"eBusiness Information","id":"b2ff67e6df02463da9d4243cb432c5136f9134e6","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/b2ff67e6df02463da9d4243cb432c5136f9134e6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Pierre Dal-Pra"},"twitter":"@pierre_dalpra"}],"title":"SBT, un outil plus simple qu'on ne veut vous le faire croire","lang":"fr","summary":"Nous avons tous lu quelque part que \"SBT c'est compliqué\", \"Mieux vaut éviter SBT dans un premier temps\" et que Maven lui est préférable.\r\n\r\nJe vais tâcher de vous montrer que SBT est finalement plus simple qu'il n'y paraît, qu'il dispose de plusieurs outils pour vous aider à mieux le connaître et l'utiliser et de démystifier SBT en général. \r\nLes concepts de Settings et de Tasks, les commandes 'show' et 'inspect' n'auront plus de secrets pour vous !\r\nJe présenterais aussi quelques techniques pour vous aider à garder votre build simple, bien organisé et facile à comprendre."},{"talkType":"Conference","track":"Scala as a language","audienceLevel":"intermediate","summaryAsHtml":"<p>Scala Collections are amazingly powerful and cleverly designed, but often don&#x27;t perform good enough for computation-intensive tasks, spurring various efforts in the Scala ecosystem to improve the situation.</p>\n<p>This talks explains some problems behind these performance issues, and details the approach and trade-offs chosen in Scalaxy/Streams&#x27;s compiler plugin and macros to tackle them. It also reveals some pitfalls of such optimizations, and hacks that can be used to write similar non-trivial macros.</p>\n<p>https://github.com/ochafik/Scalaxy/tree/master/Streams</p>\n","id":"PJH-866","speakers":[{"name":"Olivier Chafik","company":"Google","id":"c71924c74416729b047b177382bd631271bbfd5b","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c71924c74416729b047b177382bd631271bbfd5b","rel":"http://cfp.scala.io/api/profile/speaker","title":"Olivier Chafik"},"twitter":"@ochafik"}],"title":"Faster Scala Collections with Scalaxy/Streams!","lang":"en","summary":"Scala Collections are amazingly powerful and cleverly designed, but often don't perform good enough for computation-intensive tasks, spurring various efforts in the Scala ecosystem to improve the situation.\r\n\r\nThis talks explains some problems behind these performance issues, and details the approach and trade-offs chosen in Scalaxy/Streams's compiler plugin and macros to tackle them. It also reveals some pitfalls of such optimizations, and hacks that can be used to write similar non-trivial macros.\r\n\r\nhttps://github.com/ochafik/Scalaxy/tree/master/Streams"},{"talkType":"Hand's on Labs","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>Lors de ce workshop, je partagerais notre expérience dans la construction d&#x27;un moteur de recommandation s&#x27;appuyant sur Apache Spark et ElasticSearch.</p>\n<p>L&#x27;objectif de ce workshop est d&#x27;initier les participants à la mise en oeuvre des solutions de traitement massif de données avec Spark/MLLib et le DSL Scala elastic4s.</p>\n<p>Les participants pratiqueront les activités suivantes :</p>\n<ol>\n<li>Installer et configurer un cluster Spark et ElasticSearch comme une source de données Hadoop</li>\n<li>Explorer  les données avec Spark</li>\n<li>Construire un moteur de recommandation avec Spark, MLLib et ElasticSearch</li>\n<li>Fournir des analyses en temps-réel avec Spark Streaming</li>\n</ol>\n","id":"IOY-555","speakers":[{"name":"Hayssam Saleh","company":"ebiznext","id":"f3c720fe3a919bcddccb3899786ec1892af8533d","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/f3c720fe3a919bcddccb3899786ec1892af8533d","rel":"http://cfp.scala.io/api/profile/speaker","title":"Hayssam Saleh"},"twitter":"@hayssams"}],"title":"Applied Machine Learning with Apache Spark, MLlib and ElasticSearch","lang":"fr","summary":"Lors de ce workshop, je partagerais notre expérience dans la construction d'un moteur de recommandation s'appuyant sur Apache Spark et ElasticSearch.\r\n\r\nL'objectif de ce workshop est d'initier les participants à la mise en oeuvre des solutions de traitement massif de données avec Spark/MLLib et le DSL Scala elastic4s.\r\n\r\nLes participants pratiqueront les activités suivantes :\r\n\r\n1. Installer et configurer un cluster Spark et ElasticSearch comme une source de données Hadoop\r\n2. Explorer  les données avec Spark\r\n3. Construire un moteur de recommandation avec Spark, MLLib et ElasticSearch\r\n4. Fournir des analyses en temps-réel avec Spark Streaming\r\n"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Are you a play chef or want to be? Then come to this session to learn how professional Play chefs are developing Play applications for real world. I will share their best kept secrets, patterns and tricks. So come hungry.</p>\n","id":"XCM-178","speakers":[{"name":"Nilanjan Raychaudhuri","company":"Typesafe","id":"ef5373539d3186e7bccece4d68a541d65961a0cd","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/ef5373539d3186e7bccece4d68a541d65961a0cd","rel":"http://cfp.scala.io/api/profile/speaker","title":"Nilanjan Raychaudhuri"},"twitter":"@nraychaudhuri"}],"title":"Delicious Play recipes for real world (with Akka and Slick ingredients)","lang":"en","summary":"Are you a play chef or want to be? Then come to this session to learn how professional Play chefs are developing Play applications for real world. I will share their best kept secrets, patterns and tricks. So come hungry."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>When working in teams, the best way to keep an eye on code quality is to setup an automated process of quality assurance.</p>\n<p>In this talk I&#x27;ll introduce Scoverage (Scala code coverage tool) and explain how continuous integration can be used to assist you in the integration of new changes and their deployment.</p>\n","id":"BIV-211","speakers":[{"name":"Roch Delsalle","company":"Mister Bell","id":"261bb32e27f6435ab02c4bdc712ef8999b4f7e2d","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/261bb32e27f6435ab02c4bdc712ef8999b4f7e2d","rel":"http://cfp.scala.io/api/profile/speaker","title":"Roch Delsalle"},"twitter":"@D_Roch"}],"title":"Scala Quality Assurance","lang":"en","summary":"When working in teams, the best way to keep an eye on code quality is to setup an automated process of quality assurance.\r\n\r\nIn this talk I'll introduce Scoverage (Scala code coverage tool) and explain how continuous integration can be used to assist you in the integration of new changes and their deployment."},{"talkType":"Hand's on Labs","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>Sur la base de l&#x27;exemple FsUno et de son portage en Scala, les participants pourront faire leur premiers pas dans la maitrise de l&#x27;Event Sourcing.</p>\n<p>Cette technique de modélisation et de persistance qui consiste à sauver la succession des évènements qui ont eu lieu plutôt que l&#x27;état actuel se prête particulièrement bien à une écriture fonctionnelle.</p>\n<p>Nous partirons de zéro et écrirons une implémentation d&#x27;un domaine, puis mettrons en place l&#x27;infrastructure nécessaire en utilisant l&#x27; Event Store, prêt pour être mis en production.</p>\n","id":"WLC-345","speakers":[{"name":"Jérémie Chassaing","company":null,"id":"c525b410d66cd31e32809f2ae1202b2885d1bc27","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c525b410d66cd31e32809f2ae1202b2885d1bc27","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jérémie Chassaing"},"twitter":"@thinkb4coding"},{"name":"Xavier Bucchiotty","company":"Xebia","id":"5cdc7bced72bd089a3e2b83bff6b705a42c6b8cf","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/5cdc7bced72bd089a3e2b83bff6b705a42c6b8cf","rel":"http://cfp.scala.io/api/profile/speaker","title":"Xavier Bucchiotty"},"twitter":"@xbucchiotty"}],"title":"Event Sourcing Workshop","lang":"fr","summary":"Sur la base de l'exemple FsUno et de son portage en Scala, les participants pourront faire leur premiers pas dans la maitrise de l'Event Sourcing.\r\n\r\nCette technique de modélisation et de persistance qui consiste à sauver la succession des évènements qui ont eu lieu plutôt que l'état actuel se prête particulièrement bien à une écriture fonctionnelle.\r\n\r\nNous partirons de zéro et écrirons une implémentation d'un domaine, puis mettrons en place l'infrastructure nécessaire en utilisant l' Event Store, prêt pour être mis en production.\r\n\r\n"},{"talkType":"Conference","track":"Type-Level and/or Functionnal Programming","audienceLevel":"intermediate","summaryAsHtml":"<p>Présentation de la monade Free au travers de l&#x27;implémentation d&#x27;une API de stream processing.</p>\n","id":"UWL-285","speakers":[{"name":"Yorick Laupa","company":"Valwin","id":"c3420f4c03af40f298c71a2ca38acf03d7e1ce6a","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c3420f4c03af40f298c71a2ca38acf03d7e1ce6a","rel":"http://cfp.scala.io/api/profile/speaker","title":"Yorick Laupa"},"twitter":"@yoeight"}],"title":"La monade Free par l'exemple","lang":"fr","summary":"Présentation de la monade Free au travers de l'implémentation d'une API de stream processing."},{"talkType":"Conference","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>Even with one of the largest Hadoop clusters in Europe, there comes a time when your data cries to be processed online too, because you&#x27;d love low latency or because there&#x27;s simply too much data for your storage or network capacity.</p>\n<p>So at Criteo we&#x27;ve transitioned to an hybrid batch/streaming architecture, where Hadoop plays nice with Kafka, Storm, and lately SummingBird a bridge between the two approaches.</p>\n<p>In this session we&#x27;ll cover our architecture, the tools it&#x27;s made of, the interesting gotchas we&#x27;ve run into and how everything - from business events to application logs and system metrics - become precious data in a streaming world.</p>\n","id":"IUS-751","speakers":[{"name":"Yann Schwartz","company":"Criteo","id":"88a4d9b1421b065c01e8464e5950771391c35b91","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/88a4d9b1421b065c01e8464e5950771391c35b91","rel":"http://cfp.scala.io/api/profile/speaker","title":"Yann Schwartz"},"twitter":"@abolibibelot"},{"name":"Sofian Djamaa","company":"Criteo","id":"164f553786edf036dcadb3bc56f4d868ad95c61b","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/164f553786edf036dcadb3bc56f4d868ad95c61b","rel":"http://cfp.scala.io/api/profile/speaker","title":"Sofian Djamaa"},"twitter":"@sdjamaa"}],"title":"Stream all the things! - life at the end of the firehose","lang":"en","summary":"Even with one of the largest Hadoop clusters in Europe, there comes a time when your data cries to be processed online too, because you'd love low latency or because there's simply too much data for your storage or network capacity.\r\n\r\n\r\nSo at Criteo we've transitioned to an hybrid batch/streaming architecture, where Hadoop plays nice with Kafka, Storm, and lately SummingBird a bridge between the two approaches.\r\n\r\n\r\nIn this session we'll cover our architecture, the tools it's made of, the interesting gotchas we've run into and how everything - from business events to application logs and system metrics - become precious data in a streaming world."},{"talkType":"Conference","track":"Frameworks, Libraries and Ecosystem","audienceLevel":"intermediate","summaryAsHtml":"<p>The new akka-http module, the successor of spray.io, provides a fast and fully-featured client- and server-side HTTP stack. It allows you to easily build high-performance REST/HTTP-based integration layers for connecting your Scala applications to the world.</p>\n<p>In this session we&#x27;ll look into what akka-http brings to the table, how it is used and what improvements it brings over spray. And of course we&#x27;ll share the latest roadmap for making akka-http the new &quot;driver&quot; layer for the Play framework.</p>\n","id":"UYL-728","speakers":[{"name":"Johannes Rudolph","company":null,"id":"c68862b2b2d303dd121632c0ef452b3ccd1a0ff8","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/c68862b2b2d303dd121632c0ef452b3ccd1a0ff8","rel":"http://cfp.scala.io/api/profile/speaker","title":"Johannes Rudolph"},"twitter":"@virtualvoid"},{"name":"Mathias Doenitz","company":null,"id":"845cfd93f1f9e5414b32adf93ae0e602f1aa443d","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/845cfd93f1f9e5414b32adf93ae0e602f1aa443d","rel":"http://cfp.scala.io/api/profile/speaker","title":"Mathias Doenitz"},"twitter":"@sirthias"}],"title":"akka-http: connect to the world","lang":"en","summary":"The new akka-http module, the successor of spray.io, provides a fast and fully-featured client- and server-side HTTP stack. It allows you to easily build high-performance REST/HTTP-based integration layers for connecting your Scala applications to the world.\r\n\r\nIn this session we'll look into what akka-http brings to the table, how it is used and what improvements it brings over spray. And of course we'll share the latest roadmap for making akka-http the new \"driver\" layer for the Play framework."},{"talkType":"Conference","track":"Scala as a language","audienceLevel":"novice","summaryAsHtml":"<p>Typelevel recently announced their fork of the Scala compiler, with the goal of introducing exciting new features to an experimental Scala compiler for people who are happy to accept a little more turbulence as the language ascends to greater heights.</p>\n<p>But what new features are planned? How will Typelevel work with Typesafe to avoid fragmenting the Scala ecosystem and community? And how can you get involved?</p>\n<p>Jon and Lars will answer these questions, and explain some of the history, motivation and planning behind the Typelevel fork, and offer their thoughts on where it&#x27;s going over the coming months</p>\n","id":"GZU-778","speakers":[{"name":"Jon Pretty","company":"Typelevel & Propensive","id":"91e1d5b41eb4349a787d31252d448085e505fc25","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/91e1d5b41eb4349a787d31252d448085e505fc25","rel":"http://cfp.scala.io/api/profile/speaker","title":"Jon Pretty"},"twitter":"@propensive"},{"name":"Lars Hupel","company":"TU München","id":"2f1f74d0573b8f87130b3445d05fbaffe60519a6","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/2f1f74d0573b8f87130b3445d05fbaffe60519a6","rel":"http://cfp.scala.io/api/profile/speaker","title":"Lars Hupel"},"twitter":"@larsr_h"}],"title":"Typelevel Scala: What does it mean for the language, the ecosystem, the community, and you?","lang":"en","summary":"Typelevel recently announced their fork of the Scala compiler, with the goal of introducing exciting new features to an experimental Scala compiler for people who are happy to accept a little more turbulence as the language ascends to greater heights.\r\n\r\nBut what new features are planned? How will Typelevel work with Typesafe to avoid fragmenting the Scala ecosystem and community? And how can you get involved?\r\n\r\nJon and Lars will answer these questions, and explain some of the history, motivation and planning behind the Typelevel fork, and offer their thoughts on where it's going over the coming months"},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>Les architectures réactives cherchent à mieux exploiter les différents cœurs des processeurs en réduisant le nombre de threads. Mais <em>elles sont vulnérables</em> à une utilisation malheureuse d’une <em>API bloquante</em>. Comment s’assurer que tous les développeurs appliquent bien les bonnes pratiques ? Comment identifier les usages demandant un effort de conception supplémentaire pour tirer partie au maximum de ce modèle de développement ?\nNous présenterons l’outil audit-reactive qui permet d’identifier au plus tôt les invocations hasardeuses d’API. Cela réserve des surprises sur des frameworks comme <em>Play</em>...</p>\n","id":"NVW-615","speakers":[{"name":"Philippe PRADOS","company":"OCTO Technology","id":"aec803918d74235ed8d9206e743b1ece9be63324","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/aec803918d74235ed8d9206e743b1ece9be63324","rel":"http://cfp.scala.io/api/profile/speaker","title":"Philippe PRADOS"},"twitter":"@pprados"},{"name":"François-Xavier Bonnet","company":"OCTO Technology","id":"b0f80ef66301e209d3cce238b862bef96d94a5eb","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/b0f80ef66301e209d3cce238b862bef96d94a5eb","rel":"http://cfp.scala.io/api/profile/speaker","title":"François-Xavier Bonnet"},"twitter":"@fxbonnet"}],"title":"Auditez vos architectures réactives !","lang":"fr","summary":"Les architectures réactives cherchent à mieux exploiter les différents cœurs des processeurs en réduisant le nombre de threads. Mais *elles sont vulnérables* à une utilisation malheureuse d’une *API bloquante*. Comment s’assurer que tous les développeurs appliquent bien les bonnes pratiques ? Comment identifier les usages demandant un effort de conception supplémentaire pour tirer partie au maximum de ce modèle de développement ?\r\nNous présenterons l’outil audit-reactive qui permet d’identifier au plus tôt les invocations hasardeuses d’API. Cela réserve des surprises sur des frameworks comme *Play*..."},{"talkType":"Conference","track":"Data and Scala","audienceLevel":"intermediate","summaryAsHtml":"<p>On any given day at www.ebay.com, we have ~400 million items for sale across ~15,000 categories. One way we have attempted to make any sense out of this set of items is to cluster them via a massive graph. We&#x27;ll talk about our efforts to implement this clustering from the initial research stages all the way through current production systems, along with the technology challenges we faced along the way.</p>\n","id":"QJH-312","speakers":[{"name":"Christopher Severs","company":"eBay","id":"d663124dfd061895b61d20739c93d1c5dca67656","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/d663124dfd061895b61d20739c93d1c5dca67656","rel":"http://cfp.scala.io/api/profile/speaker","title":"Christopher Severs"},"twitter":"@ccsevers"},{"name":"Alex Zhicharevich","company":"eBay","id":"72b740faa44d7d23ab949773a59788824c57c767","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/72b740faa44d7d23ab949773a59788824c57c767","rel":"http://cfp.scala.io/api/profile/speaker","title":"Alex Zhicharevich"},"twitter":null}],"title":"From research to production with Scalding, Algebird and Spark","lang":"en","summary":"On any given day at www.ebay.com, we have ~400 million items for sale across ~15,000 categories. One way we have attempted to make any sense out of this set of items is to cluster them via a massive graph. We'll talk about our efforts to implement this clustering from the initial research stages all the way through current production systems, along with the technology challenges we faced along the way. "},{"talkType":"Quickie","track":"Data and Scala","audienceLevel":"novice","summaryAsHtml":"<p>La data est partout. Il devient indispensable de maîtriser les flux de traitement sur ses données. Nous verrons dans cet courte présentation comment un système de typage fort, une syntaxe concise et la librairie Scalding facilitent le développement et la maintenance de jobs Hadoop.</p>\n","id":"EPM-696","speakers":[{"name":"Mathieu Chataigner","company":"Criteo","id":"e3ca40f46fa19bfeaac41ca391cd33aebd838a0c","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/e3ca40f46fa19bfeaac41ca391cd33aebd838a0c","rel":"http://cfp.scala.io/api/profile/speaker","title":"Mathieu Chataigner"},"twitter":"@mchataigner"}],"title":"Développer facilement sur hadoop avec Scalding","lang":"fr","summary":"La data est partout. Il devient indispensable de maîtriser les flux de traitement sur ses données. Nous verrons dans cet courte présentation comment un système de typage fort, une syntaxe concise et la librairie Scalding facilitent le développement et la maintenance de jobs Hadoop."},{"talkType":"Conference","track":"Scala and the Real World","audienceLevel":"intermediate","summaryAsHtml":"<p>J&#x27;expliquerais dans cette présentation comment et pourquoi, dans un projet avec du vécu (<strong>Rudder</strong>, <em>5 ans d&#x27;existence</em>), nous sommes passés d&#x27;une gestion d&#x27;erreur <em>à la Java</em> via des exceptions à une gestion d&#x27;erreur guidée par les types de retour : <strong>Option</strong>, puis <strong>Box</strong> de <strong>Lift</strong>.</p>\n<p>Après un fort attrait initial, ces dernières ont néanmoins révélé des limites fondamentales et nous nous tournons finalement aujourd&#x27;hui vers des types d&#x27;erreurs construits sur des bases théoriques solides permettant composabilité et non ambiguïté, tout en répondant à nos besoins métier.</p>\n","id":"CHN-267","speakers":[{"name":"Francois Armand","company":"Normation","id":"5758736d051ece7c476751ad2c9e6408a7ba3a64","link":{"href":"http://cfp.scala.io/api/conferences/scalaIOFR2014/speakers/5758736d051ece7c476751ad2c9e6408a7ba3a64","rel":"http://cfp.scala.io/api/profile/speaker","title":"Francois Armand"},"twitter":"@fanf42"}],"title":"Gérer les cas d'erreurs - Voyage initiatique des exceptions vers des types d'erreurs composables","lang":"fr","summary":"J'expliquerais dans cette présentation comment et pourquoi, dans un projet avec du vécu (**Rudder**, *5 ans d'existence*), nous sommes passés d'une gestion d'erreur *à la Java* via des exceptions à une gestion d'erreur guidée par les types de retour : **Option**, puis **Box** de **Lift**. \r\n\r\nAprès un fort attrait initial, ces dernières ont néanmoins révélé des limites fondamentales et nous nous tournons finalement aujourd'hui vers des types d'erreurs construits sur des bases théoriques solides permettant composabilité et non ambiguïté, tout en répondant à nos besoins métier. \r\n"}]
